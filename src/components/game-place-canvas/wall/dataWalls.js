
const coordinatesOfCellsX = [
  0, 25, 50, 75, 100, 125, 150, 175, 200, 225,
  250, 275, 300, 325, 350, 375, 400, 425, 450,
  475, 500, 525, 550, 575, 600, 625, 650, 675,
  700, 725, 750, 775, 800, 825, 850, 875, 900,
  925, 950, 975, 1000, 1025, 1050, 1075, 1100,
  1125, 1150, 1175,
];

const coordinatesOfCellsY = [
  0, 25, 50, 75, 100, 125, 150, 175, 200, 225,
  250, 275, 300, 325, 350, 375, 400, 425, 450,
  475, 500, 525, 550, 575, 600, 625, 650, 675,
  700, 725, 750, 775, 800, 825, 850, 875,
];

coordinatesOfCellsX.reverse();
coordinatesOfCellsY.reverse();

const coordinatesOfBlocks = [];

function createObjOfBlock(x, y) {
  return {
    x1: x,
    x2: x + 25,
    y1: y,
    y2: y + 25,
  };
}

function findCoordinatesWall(x, y) {

  const numberOfCellX = coordinatesOfCellsX.find((elementX) => {
    return x >= elementX;
  });

  const numberOfCellY = coordinatesOfCellsY.find((elementY) => {
    return y >= elementY;
  });

  const positionOfBlock = createObjOfBlock(numberOfCellX, numberOfCellY);

  coordinatesOfBlocks.push(positionOfBlock);
}


const arrCoordinatesOfBlocks = [{x1: 0, x2: 25, y1: 50, y2: 75},
{x1: 25, x2: 50, y1: 50, y2: 75},
{x1: 50, x2: 75, y1: 50, y2: 75},
{x1: 75, x2: 100, y1: 50, y2: 75},
{x1: 100, x2: 125, y1: 50, y2: 75},
{x1: 125, x2: 150, y1: 50, y2: 75},
{x1: 225, x2: 250, y1: 50, y2: 75},
{x1: 250, x2: 275, y1: 50, y2: 75} ,
{x1: 275, x2: 300, y1: 50, y2: 75} ,
{x1: 300, x2: 325, y1: 50, y2: 75} ,
{x1: 450, x2: 475, y1: 50, y2: 75},
 {x1: 475, x2: 500, y1: 50, y2: 75},
 {x1: 500, x2: 525, y1: 50, y2: 75},
 {x1: 475, x2: 500, y1: 75, y2: 100},
 {x1: 475, x2: 500, y1: 100, y2: 125},
 {x1: 475, x2: 500, y1: 125, y2: 150},
 {x1: 475, x2: 500, y1: 150, y2: 175},
 {x1: 475, x2: 500, y1: 175, y2: 200},
 {x1: 475, x2: 500, y1: 200, y2: 225},
 {x1: 475, x2: 500, y1: 225, y2: 250},
 {x1: 475, x2: 500, y1: 250, y2: 275},
 {x1: 475, x2: 500, y1: 275, y2: 300},
 {x1: 475, x2: 500, y1: 300, y2: 325},
 {x1: 475, x2: 500, y1: 325, y2: 350},
 {x1: 475, x2: 500, y1: 350, y2: 375},
 {x1: 475, x2: 500, y1: 475, y2: 500},
 {x1: 475, x2: 500, y1: 500, y2: 525},
 {x1: 475, x2: 500, y1: 525, y2: 550},
 {x1: 475, x2: 500, y1: 550, y2: 575},
 {x1: 475, x2: 500, y1: 575, y2: 600},
 {x1: 475, x2: 500, y1: 600, y2: 625},
 {x1: 475, x2: 500, y1: 625, y2: 650},
 {x1: 475, x2: 500, y1: 650, y2: 675},
 {x1: 500, x2: 525, y1: 550, y2: 575},
 {x1: 525, x2: 550, y1: 550, y2: 575},
 {x1: 550, x2: 575, y1: 550, y2: 575},
 {x1: 600, x2: 625, y1: 550, y2: 575},
 {x1: 575, x2: 600, y1: 550, y2: 575},
 {x1: 725, x2: 750, y1: 550, y2: 575},
 {x1: 750, x2: 775, y1: 550, y2: 575},
 {x1: 800, x2: 825, y1: 550, y2: 575},
 {x1: 850, x2: 875, y1: 550, y2: 575},
 {x1: 825, x2: 850, y1: 550, y2: 575},
 {x1: 775, x2: 800, y1: 550, y2: 575},
 {x1: 875, x2: 900, y1: 550, y2: 575},
 {x1: 1175, x2: 1200, y1: 300, y2: 325},
 {x1: 1150, x2: 1175, y1: 300, y2: 325},
 {x1: 1125, x2: 1150, y1: 300, y2: 325},
 {x1: 1075, x2: 1100, y1: 300, y2: 325},
 {x1: 1100, x2: 1125, y1: 300, y2: 325},
 {x1: 1050, x2: 1075, y1: 300, y2: 325},
 {x1: 1000, x2: 1025, y1: 300, y2: 325},
 {x1: 1025, x2: 1050, y1: 300, y2: 325},
 {x1: 975, x2: 1000, y1: 300, y2: 325},
 {x1: 950, x2: 975, y1: 300, y2: 325},
 {x1: 925, x2: 950, y1: 300, y2: 325},
 {x1: 900, x2: 925, y1: 300, y2: 325},
 {x1: 0, x2: 25, y1: 500, y2: 525},
 {x1: 25, x2: 50, y1: 500, y2: 525},
 {x1: 50, x2: 75, y1: 500, y2: 525},
 {x1: 75, x2: 100, y1: 500, y2: 525},
 {x1: 75, x2: 100, y1: 500, y2: 525},
 {x1: 125, x2: 150, y1: 500, y2: 525},
 {x1: 100, x2: 125, y1: 500, y2: 525},
 {x1: 150, x2: 175, y1: 500, y2: 525},
 {x1: 175, x2: 200, y1: 500, y2: 525},
 {x1: 175, x2: 200, y1: 525, y2: 550},
 {x1: 175, x2: 200, y1: 550, y2: 575},
 {x1: 175, x2: 200, y1: 650, y2: 675},
 {x1: 175, x2: 200, y1: 675, y2: 700},
 {x1: 175, x2: 200, y1: 700, y2: 725},
 {x1: 175, x2: 200, y1: 725, y2: 750},
 {x1: 175, x2: 200, y1: 750, y2: 775},
 {x1: 175, x2: 200, y1: 775, y2: 800},
 {x1: 175, x2: 200, y1: 800, y2: 825},
 {x1: 175, x2: 200, y1: 825, y2: 850},
 {x1: 175, x2: 200, y1: 850, y2: 875},
  ];


export {findCoordinatesWall, arrCoordinatesOfBlocks}